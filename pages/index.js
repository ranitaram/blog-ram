import Head from "next/head";
import Link from "next/link";
import { FaHtml5 } from "react-icons/fa";
import { TbBrandNextjs } from "react-icons/tb";
import { FiDatabase } from "react-icons/fi";
import { AiOutlineDeploymentUnit } from "react-icons/ai";
import { FaGithub } from "react-icons/fa";
import { FaAngular } from "react-icons/fa";
import { FaComputer } from "react-icons/fa6";
import { SiNestjs } from "react-icons/si";
import { FaTwitter } from "react-icons/fa";
import { PiToolboxFill } from "react-icons/pi";
import { RiTailwindCssFill } from "react-icons/ri";
import { FaInstagram } from "react-icons/fa";
import { useState, useEffect, useRef } from "react";
import useFetchData from "@/hooks/useFetchData";
import ImageSection from "@/components/poyectos";

function extractFirstImageUrl(markdownContent) {
  // Check if markdownContent is provided and non-empty
  if (!markdownContent || typeof markdownContent !== 'string') {
    return null;
  }

  // Regular expression to match the first image URL in markdown format ![alt text](imageURL)
  const regex = /!\[.*?\]\((.*?)\)/;
  const match = markdownContent.match(regex);
  return match ? match[1] : null;
}

export default function Home() {
  const [currentPage, setCurrentPage] = useState(1);
  const [perPage] = useState(5);
  const { alldata, loading } = useFetchData(`/api/getblog`);

  const [downloadLink, setDownloadLink] = useState(null);
  const hiddenLink = useRef(null);

  useEffect(() => {
    const fetchPdf = async () => {
      const response = await fetch('/ebooks/ebook.pdf');
      const blob = await response.blob();
      setDownloadLink(URL.createObjectURL(blob));
    };
    fetchPdf();
  }, []);

  const handleClick = () => {
    hiddenLink.current.click();
  };


  // Function to handle page change
  const paginate = (pageNumber) => {
    setCurrentPage(pageNumber);
  };

  const indexOfLastblog = currentPage * perPage;
  const indexOfFirstblog = indexOfLastblog - perPage;
  const currentBlogs = alldata.slice(indexOfFirstblog, indexOfLastblog);

  const allblog = alldata.length; // Total number of blogs

  // Filtering publish blogs
  const publishedblogs = currentBlogs.filter(ab => ab.status === "publish")

  const pageNumbers = [];

  for (let i = 1; i <= Math.ceil(allblog / perPage); i++) {
    pageNumbers.push(i);
  }

 


  return (
    <>
      <Head>
        <title>Tiburoncode</title>
        <meta name="description" content="Generated by ramses indalecio" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo-shark.ico" />
        <script async src="https://www.googletagmanager.com/gtag/js?id=G-XFXNVQNPCG"></script>

      </Head>



      <section className="header_data_section">
        <div className="container flex flex-sb w-100">
          <div className="leftheader_info" data-aos="fade-right">
            <h1>Soluciones digitales a medida. <span></span><br /></h1>
            <h3><span>¿Cuánto cuesta un sitio web? Descubre cómo calcularlo con nuestra guía.</span></h3>
            {/* <h3>Specialized in TypeScript and NextJs</h3> */}
            <div className="flex gap-2 ">
              
              {/* <Link href='/about'><button>Sobre nosotros</button></Link> */}
              <Link href='/'><button className="download-button" onClick={handleClick}>Descarga gratis</button></Link>
              <a href={downloadLink} download="ebook.pdf" ref={hiddenLink} style={{ display: 'none' }} />
              
            </div>

          </div>
          <div className="rightheader_img" data-aos="zoom-in">
            {/* <div className="image_bg_top"></div>
            <div className="image_bg_top2"></div> */}
            <img src="/img/logo-shark.png" alt="coder" />
          </div>
        </div>
      </section>

     {/* <ImageSection/> */}

      <section className="main_blog_section">
        <div className="container flex flex-sb flex-left flex-wrap">
          <div className="leftblog_sec">
            <h2>Publicado recientemente</h2>
            <div className="blogs_sec">
              {loading ? <><div className="wh-100 flex flex-center mt-2 pb-5">
                <div aria-live="assertive" role="alert" className="loader"></div></div></> : <>
                {publishedblogs.map((blog) => {
                  // in the markdown content first image show here
                  const firstImageUrl = extractFirstImageUrl(blog.description);
                  return <div className="blog" key={blog._id} data-aos="fade-up">
                    <div className="blogimg">
                      <Link href={`/blog/${blog.slug}`}>
                        <img src={firstImageUrl || "/img/noimage.jpg"} alt="blog" />
                      </Link>
                    </div>
                    <div className="bloginfo">
                      <Link href={`/tag/${blog.tags[0]}`}><div className="blogtag">{blog.tags[0]}</div></Link>
                      <Link href={`/blog/${blog.slug}`}><h3>{blog.title}</h3></Link>
                      <p>{blog.slug}</p>
                      <div className="blogauthor flex gap-1">
                        <div className="blogaimg">
                          <img src="/img/ram-sin-fondo.png" alt="author" />
                        </div>
                        <div className="flex flex-col flex-left gap-05">
                          <h4>Ramses Indalecio</h4>
                          <span>{new Date(blog.createdAt).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                })}

              </>}


            </div>
            <div className='blogpagination'>
              <button onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1}>Previous</button>
              {pageNumbers.slice(Math.max(currentPage - 3, 0), Math.min(currentPage + 2, pageNumbers.length)).map(number => (
                <button
                  key={number}
                  onClick={() => paginate(number)}
                  className={`${currentPage === number ? 'active' : ''}`}
                >
                  {number}
                </button>
              ))}
              <button onClick={() => paginate(currentPage + 1)} disabled={currentBlogs.length < perPage}>Next</button>
            </div>
          </div>
          <div className="rightblog_info">
            <div className="topics_sec">
              <h2>Temas</h2>
              <div className="topics_list">
                <Link href='/topics/angular' data-aos="fade-up">
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                    <FaAngular />
                    </div>
                    <h3>Angular</h3>
                  </div>
                </Link>
                <Link href='/topics/htmlcssjs' data-aos="fade-up">
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                      <FaHtml5 />
                    </div>
                    <h3>Html, css & TypeScript</h3>
                  </div>
                </Link>
                <Link href='/topics/nextjs'>
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                      <TbBrandNextjs />
                    </div>
                    <h3>Next Js, React js</h3>
                  </div>
                </Link>
                <Link href='/topics/tailwind'>
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                    <RiTailwindCssFill />
                    </div>
                    <h3>Tailwind</h3>
                  </div>
                </Link>
                <Link href='/topics/recursos'>
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                    <PiToolboxFill />
                    </div>
                    <h3>Recursos ùtiles</h3>
                  </div>
                </Link>
                <Link href='/topics/web'>
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                    <FaComputer />
                    </div>
                    <h3>Web para negocios</h3>
                  </div>
                </Link>
                <Link href='/topics/nest'>
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                    <SiNestjs />
                    </div>
                    <h3>Nest</h3>
                  </div>
                </Link>
                <Link href='/topics/database' data-aos="fade-up">
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                      <FiDatabase />
                    </div>
                    <h3>DataBase</h3>
                  </div>
                </Link>
                <Link href='/topics/deployment' data-aos="fade-up">
                  <div className="topics">
                    <div className="flex flex-center topics_svg">
                      <AiOutlineDeploymentUnit />
                    </div>
                    <h3>Deployment</h3>
                  </div>
                </Link>
              </div>
            </div>
            <div className="tags_sec mt-3">
              <h2>Tags</h2>
              <div className="tags_list" data-aos="fade-up">
                <Link href='/tag/html'>#html</Link>
                <Link href='/tag/css'>#css</Link>
                <Link href='/tag/javascript'>#javaScript</Link>
                <Link href='/tag/typescript'>#tipeScript</Link>
                <Link href='/tag/nextjs'>#nextjs</Link>
                <Link href='/tag/reactjs'>#reactjs</Link>
                <Link href='/tag/database'>#database</Link>
                <Link href='/tag/tailwind'>#tailwind</Link>
                <Link href='/tag/recursos'>#recursos</Link>
                <Link href='/tag/nest'>#nest</Link>
                <Link href='/tag/web'>#web</Link>
                <Link href='/tag/angular'>#angular</Link>
                <Link href='/tag/mongodb'>#mongodb</Link>
                <Link href='/tag/postgres'>#postgres</Link>
              </div>
            </div>
            <div className="letstalk_sec mt-3">
              <h2>Redes sociales</h2>
              <div className="talk_sec">
                <h4>¿Quieres saber cómo puedo resolver problemas específicos de tu negocio? Hablemos.</h4>
                {/* <iframe src="https://docs.google.com/forms/d/e/1FAIpQLSeWolcLWStqxiqbw42hn3TVmPAFS_HoLrlM5FYZiniJkWfPEw/viewform?embedded=true" width="640" height="876" frameborder="0" marginheight="0" marginwidth="0">Cargando…</iframe> */}
                <div className="social_talks flex flex-center gap-1 mt-2">
                  <div className="st_icon" data-aos="fade-up"  onClick={() => window.location.href = 'https://github.com/ranitaram'}>
                    <FaGithub />
                  </div>
                  <div className="st_icon" data-aos="fade-up" onClick={() => window.location.href = 'https://x.com/TiburonCode'}>
                    <FaTwitter />
                  </div>
                  {/* <div className="st_icon" data-aos="fade-up">
                    <FaInstagram />
                  </div> */}
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}
